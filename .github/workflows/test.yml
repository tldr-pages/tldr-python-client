name: Test

on: ['push', 'pull_request']

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ['ubuntu-latest', 'ubuntu-24.04-arm']
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', 'pypy3.9', 'pypy3.10']

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install developer dependencies
      run: |
        python3 -m pip install -U pip setuptools
        python3 -m pip install -U pytest pytest-runner flake8

    - name: Install sphinx dependencies
      run: >-
        python3 -m
        pip install
        sphinx
        sphinx-argparse
        --user

    - name: Install tldr dependencies
      run: >-
        python3 -m
        pip install
        -r
        requirements.txt
        --user

    - name: Generate the manpage
      working-directory: docs
      run: make man

    - name: Lint codebase
      run: python3 -m flake8

    - name: Run test suite
      run: python3 -m pytest tests/

    - name: Test tldr cli
      run: |
        python3 -m pip install .
        tldr --version

  build-snap:
    runs-on: ${{ matrix.os }}
    needs: ['build']

    strategy:
      matrix:
        os: ['ubuntu-latest', 'ubuntu-24.04-arm']

    steps:
     - uses: actions/checkout@v4

     - uses: canonical/action-build@3bdaa03e1ba6bf59a65f84a751d943d549a54e79 # v1.3.0
       id: snapcraft-build
       with:
         snapcraft-args: "-v"

     - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
       with:
         name: ${{ steps.snapcraft-build.outputs.snap }}
         path: ${{ steps.snapcraft-build.outputs.snap }}
