name: Test

on: ['push', 'pull_request']

jobs:
  build-linux:
    runs-on: ${{ matrix.os }}

    permissions:
      contents: read

    strategy:
      matrix:
        os: ['ubuntu-latest', 'ubuntu-24.04-arm']
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13', 'pypy3.10', 'pypy3.11']

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install developer dependencies
      run: |
        python3 -m pip install -U pip
        python3 -m pip install -U pytest pytest-runner flake8

    - name: Install sphinx dependencies
      run:
        python3 -m pip install sphinx sphinx-argparse --user

    - name: Install tldr dependencies
      run:
        python3 -m pip install -r requirements.txt --user

    - name: Generate the manpage
      working-directory: docs
      run: make man

    - name: Lint codebase
      run: python3 -m flake8

    - name: Run test suite
      run: python3 -m pytest tests/

    - name: Test tldr cli
      run: |
        python3 -m pip install .
        tldr --version

  build-macos:
    runs-on: macos-latest
    needs: ['build-linux']

    permissions:
      contents: read

    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13', 'pypy3.10', 'pypy3.11']

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install developer dependencies
      run: |
        python3 -m pip install -U pip
        python3 -m pip install -U pytest pytest-runner flake8

    - name: Install sphinx dependencies
      run: |
        python3 -m pip install sphinx sphinx-argparse
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install tldr dependencies
      run:
        python3 -m pip install -r requirements.txt --user

    - name: Generate the manpage
      working-directory: docs
      run: make man

    - name: Lint codebase
      run: python3 -m flake8

    - name: Run test suite
      run: python3 -m pytest tests/

    - name: Test tldr cli
      run: |
        python3 -m pip install .
        tldr --version

  build-windows:
    runs-on: windows-latest
    needs: ['build-macos']

    permissions:
      contents: read

    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install developer dependencies
      run: |
        python3 -m pip install -U pip
        python3 -m pip install -U pytest pytest-runner flake8

    - name: Install sphinx dependencies
      run: |
         python -m pip install sphinx sphinx-argparse --user

    - name: Install tldr dependencies
      run:
        python3 -m pip install -r requirements.txt --user

    - name: Generate the manpage
      working-directory: docs
      run: make man

    - name: Lint codebase
      run: python3 -m flake8

    - name: Run test suite
      run: python3 -m pytest tests/

    - name: Test tldr cli
      run: |
        python3 -m pip install .
        tldr --version

  build-windows-arm:
      runs-on: windows-11-arm
      needs: ['build-windows']

      permissions:
        contents: read
  
      strategy:
        matrix:
          python-version: ['3.11', '3.12', '3.13']
  
      steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ matrix.python-version }}
  
      - name: Install developer dependencies
        run: |
          python3 -m pip install -U pip
          python3 -m pip install -U pytest pytest-runner flake8
  
      - name: Install tldr dependencies
        run:
          python3 -m pip install -r requirements.txt --user
  
      - name: Lint codebase
        run: python3 -m flake8
  
      - name: Run test suite
        run: python3 -m pytest tests/
  
      - name: Test tldr cli
        run: |
          python3 -m pip install .
          tldr --version

  build-snap:
    runs-on: ${{ matrix.os }}
    if: github.repository == 'tldr-pages/tldr-python-client' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    needs: ['build-linux']

    permissions:
      contents: read

    strategy:
      matrix:
        os: ['ubuntu-latest', 'ubuntu-24.04-arm']

    steps:
     - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

     - uses: canonical/action-build@3bdaa03e1ba6bf59a65f84a751d943d549a54e79 # v1.3.0
       id: snapcraft-build
       with:
         snapcraft-args: "-v"

     - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
       with:
         name: ${{ steps.snapcraft-build.outputs.snap }}
         path: ${{ steps.snapcraft-build.outputs.snap }}
